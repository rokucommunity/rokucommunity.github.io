module.exports = {
    extends: ['plugin:astro/recommended'],
    overrides: [
        {
            // Define the configuration for `.astro` file.
            files: ['*.astro', '*.ts'],
            // Allows Astro components to be parsed.
            parser: 'astro-eslint-parser',
            // Parse the script in `.astro` as TypeScript by adding the following configuration.
            // It's the setting you need when using TypeScript.
            parserOptions: {
                parser: '@typescript-eslint/parser',
                extraFileExtensions: ['.astro']
            },
            rules: {
                'comma-dangle': 'error',
                'array-type': 'off',
                'consistent-type-assertions': 'off',
                'explicit-function-return-type': 'off',
                'explicit-member-accessibility': 'off',
                'explicit-module-boundary-types': 'off',
                'init-declarations': 'off',
                'lines-between-class-members': 'off',
                'member-ordering': 'off',
                'method-signature-style': 'off',
                'naming-convention': 'off',
                'no-base-to-string': 'off',
                semi: 'error',
                'no-confusing-void-expression': 'off',
                'no-dynamic-delete': 'off',
                'no-empty-function': 'off',
                'no-explicit-any': 'off',
                'no-extra-parens': 'off',
                'no-implicit-any-catch': 'off',
                'no-invalid-this': 'off',
                'no-magic-numbers': 'off',
                'no-parameter-properties': 'off',
                //had to add this rule to prevent eslint from crashing
                'no-restricted-imports': ['off', {}],
                //mitigating this sometimes results in undesirably verbose code. Should investigate enabling again in the future.
                'no-unsafe-argument': 'off',
                'object-curly-spacing': 'off',
                'object-curly-spacing': ['error', 'always'],
                'no-shadow': 'off',
                'no-this-alias': 'off',
                //possibly disable this once we have converted all throw statements to actual errors
                'no-throw-literal': 'off',
                'no-invalid-void': 'off',
                'no-invalid-void-type': 'off',
                'no-type-alias': 'off',
                'no-unnecessary-boolean-literal-compare': 'off',
                'no-unnecessary-condition': 'off',
                'no-unsafe-assignment': 'off',
                'no-unsafe-call': 'off',
                'no-unsafe-member-access': 'off',
                'no-unsafe-return': 'off',
                'no-unused-vars': 'off',
                'no-unused-vars-experimental': 'off',
                'no-use-before-define': 'off',
                'prefer-for-of': 'off',
                'prefer-readonly': 'off',
                'prefer-readonly-parameter-types': 'off',
                'promise-function-async': 'off',
                quotes: [
                    'error',
                    'single',
                    {
                        allowTemplateLiterals: true
                    }
                ],
                'require-array-sort-compare': 'off',
                'restrict-plus-operands': 'off',
                'restrict-template-expressions': 'off',
                'sort-type-union-intersection-members': 'off',
                'space-before-function-paren': 'off',
                'strict-boolean-expressions': 'off',
                typedef: 'off',
                'unbound-method': 'off',
                'unified-signatures': 'off',
                'array-bracket-newline': 'off',
                'array-element-newline': 'off',
                'array-type': 'off',
                'arrow-body-style': 'off',
                'arrow-parens': 'off',
                'callback-return': 'off',
                'capitalized-comments': 'off',
                'class-methods-use-this': 'off',
                complexity: 'off',
                'consistent-return': 'off',
                'consistent-this': 'off',
                curly: 'error',
                'default-case': 'off',
                'dot-location': 'off',
                'dot-notation': 'off',
                'func-style': 'off',
                'function-call-argument-newline': 'off',
                'function-paren-newline': 'off',
                'getter-return': 'off',
                'guard-for-in': 'off',
                'id-length': 'off',
                indent: 'off',
                'init-declarations': 'off',
                'line-comment-position': 'off',
                'linebreak-style': 'off',
                'lines-around-comment': 'off',
                'lines-between-class-members': 'off',
                'max-classes-per-file': 'off',
                'max-depth': 'off',
                'max-len': 'off',
                'max-lines': 'off',
                'max-lines-per-function': 'off',
                'max-params': 'off',
                'max-statements': 'off',
                'multiline-comment-style': 'off',
                'multiline-ternary': 'off',
                'new-cap': 'off',
                'newline-per-chained-call': 'off',
                'no-await-in-loop': 'off',
                'no-case-declarations': 'off',
                'no-constant-condition': 'off',
                'no-console': 'off',
                'no-continue': 'off',
                'no-else-return': 'off',
                'no-empty': 'off',
                'no-implicit-coercion': 'off',
                'no-inline-comments': 'error',
                'no-invalid-this': 'off',
                'no-labels': 'off',
                'no-lonely-if': 'off',
                'no-negated-condition': 'off',
                'no-param-reassign': 'off',
                'no-plusplus': 'off',
                'no-process-exit': 'off',
                'no-prototype-builtins': 'off',
                'no-shadow': 'off',
                'no-sync': 'off',
                'no-ternary': 'off',
                'no-undefined': 'off',
                'no-underscore-dangle': 'off',
                'no-unneeded-ternary': 'off',
                'no-useless-escape': 'off',
                'no-warning-comments': 'off',
                'object-property-newline': 'off',
                'object-shorthand': ['error', 'never'],
                'one-var': ['error', 'never'],
                'padded-blocks': 'off',
                'prefer-const': 'off',
                'prefer-destructuring': 'off',
                'prefer-named-capture-group': 'off',
                'prefer-template': 'off',
                'quote-props': 'off',
                radix: 'off',
                'require-atomic-updates': 'off',
                'require-unicode-regexp': 'off',
                'sort-imports': 'off',
                'sort-keys': 'off',
                'spaced-comment': 'off',
                'vars-on-top': 'off',
                'wrap-regex': 'off'
            }
        }
    ]
};
